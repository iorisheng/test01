Based on the requirements of WuKong3.0, we perform data cleansing and processing on data retrieved from multiple APIs, reassembling it into a new JSON data structure that is provided to users for search services. Within this assembled structure, each key-value pair is associated with an alias that references the actual path of the data. The relationships between these aliases and paths are stored in a data table. When a user inputs a query condition on the webpage, the program utilizes the alias to retrieve the corresponding data storage path, and generates a runnable SQL query statement to facilitate data retrieval.

Below is an example that illustrates the relationship between user input query conditions and their corresponding transformed SQL syntax:

The following example elucidates the correlation between user-input query conditions and the resultant transformed SQL syntax.

The "full-text" field stores the ID, account numbers, business tags, and user-defined tags of the current row's data in text format and undergoes tokenization for inverted index querying.

Today my main task was to transform the syntax relationships based on user needs, new data structure, and query syntax validation into documentable forms, and showcase them through examples. The document is in progress.
The work plan for next is to finish the document and continue with the implementation of data cleaning, processing, and query syntax transformation.









